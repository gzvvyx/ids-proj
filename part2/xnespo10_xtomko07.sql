drop table Person cascade constraints;
drop table "User" cascade constraints;
drop table Room cascade constraints;
drop table Reservation cascade constraints;
drop table Apartment cascade constraints;
drop table Regular cascade constraints;
drop table Service cascade constraints;
drop table RoomService cascade constraints;
drop table ReservationPerson cascade constraints;
drop table ReservationService cascade constraints;

create table Person (
  PersonID number generated by default as identity primary key,
  Name varchar2(25) check (regexp_like(Name, '^[A-Z][a-z]+\ [A-Z][a-z]+$')) not null,
  Sex varchar2(6) check (Sex in ('Male', 'Female')),
  Address varchar2(50) not null,
  Mail varchar2(30) check (regexp_like(Mail, '^[a-zA-Z0-9_%*-+]+\@[a-z.]+\.[a-z]{2,3}$')),
  Birth date not null
);

create table "User" (
  Login varchar2(8) not null,
  Authorization varchar2(8) check (Authorization in ('Employee', 'Admin', 'Manager')) not null,
  Info number not null, -- inherits? Person's info
  FOREIGN KEY (Info) REFERENCES Person(PersonID) on delete cascade
);

create table Service (
  ServiceID number generated by default as identity primary key,
  Name varchar2(25) check (regexp_like(Name, '^[A-Z][a-z\ ]+$')) not null,
  Price number(*,2) not null,
  Description varchar2(255)
);

create table Room (
  RoomNumber number generated by default as identity primary key,
  Floor number(2,0) not null,
  IsAvailable char check ( IsAvailable in ('Y', 'N')) not null,
  Price number(*,2) not null,
  Description varchar2(255)
);

create table Regular (
  Bed varchar2(7) check (Bed in ('Single', 'Double','2Single')) not null,
  RoomInfo number not null,
  FOREIGN KEY (RoomInfo) REFERENCES Room(RoomNumber)
);

create table Apartment (
  Room_quantity number not null,
  Capacity number not null,
  DoubleBed char check ( DoubleBed in ('Y', 'N')) not null,
  Room number not null,
  FOREIGN KEY (Room) REFERENCES Room(RoomNumber)
);

create table Reservation (
  ReservationID number generated by default as identity primary key,
  DateFrom date,
  DateTo date,
  Price number(*,2),
  Payment varchar2(7) check ( Payment in ('Card', 'Cash', 'Bitcoin')) not null,
  AppliesTo number not null,
  FOREIGN KEY (AppliesTo) REFERENCES Room(RoomNumber) on delete cascade
);

create table RoomService (
    PRIMARY KEY (Room, Service),
    Room number not null,
    Service number not null,
    FOREIGN KEY (Room) REFERENCES Room(RoomNumber) on delete cascade,
    FOREIGN KEY (Service) REFERENCES Service(ServiceID) on delete cascade
);

create table ReservationPerson (
    PRIMARY KEY (Reservation, Person),
    Reservation number not null,
    Person number not null,
    FOREIGN KEY (Reservation) REFERENCES Reservation(ReservationID) on delete cascade,
    FOREIGN KEY (Person) REFERENCES Person(PersonID) on delete cascade
);

create table ReservationService (
    PRIMARY KEY (Reservation, Service),
    Reservation number not null,
    Service number not null,
    FOREIGN KEY (Reservation) REFERENCES Reservation(ReservationID) on delete cascade,
    FOREIGN KEY (Service) REFERENCES Service(ServiceID) on delete cascade
);

insert into Room (Floor, IsAvailable, Price, Description) values ('1','Y','300.59','Apartman pro rodiny');
insert into Room (Floor, IsAvailable, Price, Description) values ('2','N','0.257','Pokoj s dvema normalnimi postelemi');
insert into Room (Floor, IsAvailable, Price, Description) values ('3','Y','456789.00','Poko s jednou spojenou posteli');


insert into Apartment (Room_quantity, Capacity, DoubleBed, Room) values ('3', '5', 'Y', '1');
insert into Regular (Bed, RoomInfo) values ('2Single', '2');
insert into Regular (Bed, RoomInfo) values ('Double', '3');


insert into Person (Name, Sex, Address, Mail, Birth) values ('Tomas Novy', 'Male', 'Kocotomov 38', 'kocotom@gmail.com', date '1999-01-16');
insert into Person (Name, Sex, Address, Mail, Birth) values ('Andrej Nespor', 'Male', 'Na vyherni 38', 'xnespo10@stud.fit.vutbr.cz', date '2002-07-20');
insert into Person (Name, Sex, Address, Mail, Birth) values ('Matej Tomko', 'Male', 'Trapakov 38', 'xtomko07@fit.vutbr.cz', date '2002-08-02');
insert into Person (Name, Sex, Address, Mail, Birth) values ('Timotej Vesely', 'Male', 'Madarsko 38', 'veselyt@hotmail.com', date '2001-04-01');
insert into Person (Name, Sex, Address, Mail, Birth) values ('Adriana Nebeska', 'Female', 'Moravska 38', 'adrinka@seznam.cz', date '2001-11-16');


insert into "User" (Login, Authorization, Info) values ('xtrala14','Employee', '3');
insert into "User" (Login, Authorization, Info) values ('xadmin00','Admin', '4');


insert into Service (Name, Price, Description) values ('Snidane', '156.65', 'Hoste maji narok na snidani v nasi restauraci po predlozeni dukazu rezervace');
insert into Service (Name, Price, Description) values ('Uklid po vystehovani', '18832.00', 'Automaticka sluzba po vystehovani');
insert into Service (Name, Price, Description) values ('Bezbarierovy pristup', '0', 'Pokoj s bezbarierovym pristupem');


insert into Reservation (DateFrom, DateTo, Price, Payment, AppliesTo) values (date '2023-03-24', date '2023-03-27', '55.55', 'Bitcoin', '1');
insert into Reservation (DateFrom, DateTo, Price, Payment, AppliesTo) values (date '2023-03-28', date '2023-03-29', '66.55', 'Cash', '1');
insert into Reservation (DateFrom, DateTo, Price, Payment, AppliesTo) values (date '2023-03-24', date '2023-03-27', '77.55', 'Card', '2');


insert into RoomService (Room, Service) values ('1', '3');


insert into ReservationPerson (Reservation, Person) values ('1', '1');
insert into ReservationPerson (Reservation, Person) values ('1', '2');
insert into ReservationPerson (Reservation, Person) values ('2', '3');


insert into ReservationService (Reservation, Service) values ('1', '2');
insert into ReservationService (Reservation, Service) values ('2', '1');


SELECT * FROM
Reservation, Person, Includes, ReservationService, Service
WHERE Reservation.ReservationID = Includes.Reservation AND Person.PersonID = Includes.Included AND ReservationService.Service = Service.ServiceID
ORDER BY Person.Name;

SELECT * FROM
ReservationService, Service, Person
WHERE Service.ServiceID = 3;